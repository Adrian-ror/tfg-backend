# This file is used to configure the application.

#Configure the logging level for different packages and classes in the application.
#In this case, the logging level for SQL queries generated by Hibernate is set to "debug".
logging:
    level:
        org:
                hibernate:
                SQL: debug

#Configure aspects related to Spring Framework and its modules.
spring:
    #Configure the datasource used by the application.
    datasource:
        url: jdbc:mysql://autorack.proxy.rlwy.net:21707/railway?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
        username: root
        password: hVnvZntUNmXmAhnfvsAbszpnmeSqvTfm
        #Configure the maximum number of active connections in the connection pool.
        max-active: 4
        #Configure the maximum number of idle(inactive) connections in the connection pool.
        max-idle: 2
        #Configure the maximum time to wait for a connection from the pool.
        max-wait: 10000
        #Configure the removal of abandoned connections from the pool.
        remove-abandoned: true
        #Configure the timeout for removing abandoned connections.
        remove-abandoned-timeout: 60
        #Configure whether(if) to log abandoned connections.
        log-abandoned: true
        #Configure the validation query used to validate connections.
        validation-query: SELECT 1

    #Configure Spring Boot DevTools, which provides features like automatic restart and live reload.
    devtools:
        #Configure the trigger file used to restart the application.
        #If this file is modified, the application will automatically restart.
        #If not specified, any classpath file change triggers the restart.
        #If the file is not found, the application will not restart.
        restart:
            trigger-file: reload
        #Configure whether(if) live reload is enabled.
        livereload:
            enabled: false

    #Configure Jackson, which is used for JSON serialization and deserialization.
    jackson:
        #Jackson will only include the properties in the JSON if their value is not null..
        default-property-inclusion: NON_NULL

    servlet:
        multipart:
            enabled: true
            max-file-size: 10MB
            max-request-size: 10MB
    #Configure JPA(Hibernate) settings.
    jpa:
        hibernate:
            #Hibernate will not automatically modify the database schema.
            #This is useful in production environments where you want to manually control the evolution of the schema.
            ddl-auto: none
            #This option tells Hibernate to print generated SQL queries to the console.
            #Setting this to true makes it easier to debug and trace the queries that Hibernate runs against the database.
            show-sql: true
            #This option tells Hibernate to format the generated SQL queries for better readability.
            format-sql: true
            #This option tells Hibernate to include comments in the generated SQL queries.
            use-sql-comments: true
            #Configure the naming strategy used by Hibernate for database object
            naming:
                #This strategy generally maintains the table and column names as defined in the JPA entities,
                #without applying any additional transformations.
                physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#Configure custom properties for the application.
project:
    #Configure JWT settings for authentication and authorization.
    jwt:
        #The secret key used to sign the JWT tokens.
        signKey: WzROun12eUiDvko3UrJ74gNeJz2TWEWPMTh6DxyE8HWXIf4hETUrkM4IUGqqHq66PuVS
        #The expiration time(in minutes) for the JWT tokens.
        expirationMinutes: 1440

# The server port is set to 8090
server:
    port: 8090
